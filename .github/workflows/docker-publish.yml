name: Build and Deploy Services

on:
  push: 
    branches: ['devops']
    paths:
      - 'cybrid-backend/**'  
      - 'cybrid-txn/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 

      # Input parameters (with default values)
      - name: Set input defaults
        id: input_defaults
        run: |
          echo "cybrid_backend_input=false" >> $GITHUB_ENV
          echo "cybrid_txn_input=false" >> $GITHUB_ENV

      # Check if input variables are passed
      - name: Set inputs from action
        id: set_inputs
        run: |
          echo "cybrid_backend_input=${{ github.event.inputs.cybrid-backend || 'false' }}" >> $GITHUB_ENV
          echo "cybrid_txn_input=${{ github.event.inputs.cybrid-txn || 'false' }}" >> $GITHUB_ENV

      # Determine which services to build and deploy
      - name: Set services to build
        id: set_services
        run: |
          echo "CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)" >> $GITHUB_ENV
          if echo "$CHANGED_FILES" | grep -q '^cybrid-backend/**'; then
            echo "cybrid_backend=true" >> $GITHUB_ENV
            echo "$GITHUB_ENV"
          else
            echo "cybrid_backend=false" >> $GITHUB_ENV
             echo "$GITHUB_ENV"
          fi
          if echo "$CHANGED_FILES" | grep -q '^cybrid-txn/**'; then
            echo "cybrid_txn=true" >> $GITHUB_ENV
            echo "$GITHUB_ENV"
          else
            echo "cybrid_txn=false" >> $GITHUB_ENV
            echo "$GITHUB_ENV"
          fi

      # Log the changed files (for debugging)
      - name: github commits 
        run: echo "${{ steps.set_service.outputs.CHANGED_FILES }}"

      # Conditionally build and deploy cybrid Backend
      - name: Build and deploy cybrid Backend 
        if: env.cybrid_backend == 'true' || env.cybrid_backend_input == 'true'
        run: echo "Building and deploying cybrid Backend service"
       
      # Conditionally build and deploy cybrid txn
      - name: Build and deploy cybrid txn
        if: env.cybrid_txn == 'true' || env.cybrid_txn_input == 'true'
        run: echo "Building and deploying cybrid txn service"
